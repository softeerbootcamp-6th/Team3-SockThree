version: '3.8'

services:
  app:
    # 빌드하지 않고 GitHub Packages에서 이미지 가져오기
    image: ghcr.io/softeerbootcamp-6th/team3-sockthree/backend:${IMAGE_TAG:-latest}
    container_name: ssockthree-server
    ports:
      - "8080:8080"
    environment:
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-senicle_db}
      - SPRING_PROFILES_ACTIVE=prod
      # Redis 환경변수
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      # JWT 보안 설정 (프로덕션용 강력한 시크릿 필요)
      - JWT_SECRET=${JWT_SECRET:-seniclass-production-jwt-secret-key-change-this-in-production}
      - JWT_ACCESS_TOKEN_VALIDITY=${JWT_ACCESS_TOKEN_VALIDITY:-3600000}
      - JWT_REFRESH_TOKEN_VALIDITY=${JWT_REFRESH_TOKEN_VALIDITY:-2592000000}
      # GitHub Container Registry 인증 정보
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_USERNAME=${GITHUB_USERNAME}
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
    networks:
      - app-network

  redis:
    image: redis:7.2-alpine
    container_name: ssockthree-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

volumes:
  redis_data:

networks:
  app-network:
    driver: bridge
