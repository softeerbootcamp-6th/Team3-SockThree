name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # 변경된 파일을 감지하는 Job
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      frontend: ${{ steps.changes.outputs.frontend }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            backend:
              - 'apps/backend/**'
              - '.github/workflows/code-quality.yml'
            frontend:
              - 'apps/frontend/**'
              - '.github/workflows/code-quality.yml'

  backend-quality:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.backend == 'true'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Grant execute permission for gradlew
      run: chmod +x ./apps/backend/gradlew
      
    - name: Run Checkstyle
      run: |
        cd apps/backend
        ./gradlew checkstyleMain checkstyleTest
      
    - name: Run SpotBugs
      run: |
        cd apps/backend
        ./gradlew spotbugsMain

  frontend-quality:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: apps/frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd apps/frontend
        npm ci
    
    - name: Run ESLint
      run: |
        cd apps/frontend
        npm run lint
    
    - name: Run Prettier check
      run: |
        cd apps/frontend
        npm run format:check
